basePath: /
definitions:
  models.Book:
    properties:
      author:
        type: string
      id:
        type: string
      title:
        type: string
      year:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API для управления библиотекой книг.
  termsOfService: http://swagger.io/terms/
  title: Book Library API
  version: "1.0"
paths:
  /books:
    get:
      description: Get a list of all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "404":
          description: Books not found
          schema:
            type: string
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create a new book by providing the book details
      parameters:
      - description: Book details
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      description: Delete a book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Book deleted successfully
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete a book by ID
      tags:
      - books
    get:
      description: Get a single book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "404":
          description: Book not found
          schema:
            type: string
      summary: Get a book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update a book by providing the updated details
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated book details
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: Book not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update a book
      tags:
      - books
schemes:
- http
swagger: "2.0"
